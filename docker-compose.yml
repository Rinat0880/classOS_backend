version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: classos_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema/000001_init.up.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - classos_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  classos_backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: classos_app
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - AUTH_signingKey=${AUTH_signingKey}
      - AUTH_salt=${AUTH_salt}
      - AD_DOMAIN=${AD_DOMAIN:-}
      - AD_USERNAME=${AD_USERNAME:-}
      - AD_PASSWORD=${AD_PASSWORD:-}
      - AD_BASE_OU=${AD_BASE_OU:-}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - classos_network
    restart: unless-stopped
    volumes:
      - ./configs/config.yml:/app/configs/config.yml:ro
      
    privileged: true  
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  classos_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local